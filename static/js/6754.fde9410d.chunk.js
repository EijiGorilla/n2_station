"use strict";(self.webpackChunkn2_station=self.webpackChunkn2_station||[]).push([[6754],{6754:(t,e,n)=>{n.d(e,{a:()=>f,b:()=>d,n:()=>u,s:()=>i,t:()=>o});n(93169);var r=n(32718);function f(t,e,n){o(t.typedBuffer,e.typedBuffer,n,t.typedBufferStride,e.typedBufferStride)}function o(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:r;if(t.length/r!=e.length/f)return;const o=t.length/r,u=n[0],i=n[1],d=n[2],l=n[3],s=n[4],c=n[5],a=n[6],p=n[7],h=n[8];let y=0,g=0;for(let B=0;B<o;B++){const n=e[y],o=e[y+1],B=e[y+2],m=e[y+3];t[g]=u*n+l*o+a*B,t[g+1]=i*n+s*o+p*B,t[g+2]=d*n+c*o+h*B,t[g+3]=m,y+=f,g+=r}}function u(t,e){const n=Math.min(t.count,e.count),r=t.typedBuffer,f=t.typedBufferStride,o=e.typedBuffer,u=e.typedBufferStride;for(let i=0;i<n;i++){const t=i*f,e=i*u,n=o[e],d=o[e+1],l=o[e+2],s=n*n+d*d+l*l;if(s>0){const e=1/Math.sqrt(s);r[t]=e*n,r[t+1]=e*d,r[t+2]=e*l}}}function i(t,e,n){d(t.typedBuffer,e,n,t.typedBufferStride)}function d(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;const f=Math.min(t.length/r,e.count),o=e.typedBuffer,u=e.typedBufferStride;let i=0,d=0;for(let l=0;l<f;l++)t[d]=n*o[i],t[d+1]=n*o[i+1],t[d+2]=n*o[i+2],t[d+3]=n*o[i+3],i+=u,d+=r}Object.freeze(Object.defineProperty({__proto__:null,normalize:u,scale:d,scaleView:i,transformMat3:o,transformMat3View:f,transformMat4:function(t,e,n){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:f;if(t.length/f!=e.length/o)return void r.Z.getLogger("esri.views.3d.support.buffer.math").error("source and destination buffers need to have the same number of elements");const u=t.length/f,i=n[0],d=n[1],l=n[2],s=n[3],c=n[4],a=n[5],p=n[6],h=n[7],y=n[8],g=n[9],B=n[10],m=n[11],v=n[12],S=n[13],b=n[14],M=n[15];let w=0,_=0;for(let r=0;r<u;r++){const n=e[w],r=e[w+1],u=e[w+2],k=e[w+3];t[_]=i*n+c*r+y*u+v*k,t[_+1]=d*n+a*r+g*u+S*k,t[_+2]=l*n+p*r+B*u+b*k,t[_+3]=s*n+h*r+m*u+M*k,w+=o,_+=f}},transformMat4View:function(t,e,n){if(t.count!==e.count)return;const r=t.count,f=n[0],o=n[1],u=n[2],i=n[3],d=n[4],l=n[5],s=n[6],c=n[7],a=n[8],p=n[9],h=n[10],y=n[11],g=n[12],B=n[13],m=n[14],v=n[15],S=t.typedBuffer,b=t.typedBufferStride,M=e.typedBuffer,w=e.typedBufferStride;for(let _=0;_<r;_++){const t=_*b,e=_*w,n=M[e],r=M[e+1],k=M[e+2],V=M[e+3];S[t]=f*n+d*r+a*k+g*V,S[t+1]=o*n+l*r+p*k+B*V,S[t+2]=u*n+s*r+h*k+m*V,S[t+3]=i*n+c*r+y*k+v*V}}},Symbol.toStringTag,{value:"Module"}))}}]);
//# sourceMappingURL=6754.fde9410d.chunk.js.map