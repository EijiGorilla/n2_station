{"version":3,"file":"static/js/342.68ec4661.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/tree-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tree-item/tree-item.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tree-item/tree-item.scss?tag=calcite-tree-item&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  actionsEnd: \"actions-end\",\n  bulletPointIcon: \"bullet-point\",\n  checkbox: \"checkbox\",\n  checkboxContainer: \"checkbox-container\",\n  checkboxLabel: \"checkbox-label\",\n  checkmarkIcon: \"checkmark\",\n  chevron: \"chevron\",\n  childrenContainer: \"children-container\",\n  iconStart: \"icon-start\",\n  itemExpanded: \"item--expanded\",\n  nodeAndActionsContainer: \"node-actions-container\",\n  nodeContainer: \"node-container\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  children: \"children\",\n};\n\nexport const ICONS = {\n  blank: \"blank\",\n  bulletPoint: \"bullet-point\",\n  checkmark: \"check\",\n  checkSquareF: \"check-square-f\",\n  chevronRight: \"chevron-right\",\n  minusSquareF: \"minus-square-f\",\n  square: \"square\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  filterDirectChildren,\n  getElementDir,\n  getSlotted,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { FlipContext, Scale, SelectionMode } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { TreeItemSelectDetail } from \"./interfaces\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot children - A slot for adding nested `calcite-tree` elements.\n * @slot actions-end - A slot for adding actions to the end of the component. It is recommended to use two or fewer actions.\n */\n@Component({\n  tag: \"calcite-tree-item\",\n  styleUrl: \"tree-item.scss\",\n  shadow: true,\n})\nexport class TreeItem implements ConditionalSlotComponent, InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, the component is expanded. */\n  @Prop({ mutable: true, reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(newValue: boolean): void {\n    this.updateParentIsExpanded(this.el, newValue);\n  }\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /** When `true`, the component is selected. */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(value: boolean): void {\n    if (this.selectionMode === \"ancestors\" && !this.userChangedValue) {\n      if (value) {\n        this.indeterminate = false;\n      }\n      this.calciteInternalTreeItemSelect.emit({\n        modifyCurrentSelection: true,\n        updateItem: false,\n      });\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Prop() parentExpanded = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) depth = -1;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) hasChildren: boolean = null;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) lines: boolean;\n\n  /**\n   * @internal\n   */\n  @Prop({ reflect: true, mutable: true }) scale: Scale;\n\n  /**\n   * In ancestor selection mode, show as indeterminate when only some children are selected.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- ignoring until https://github.com/stencil-community/stencil-eslint/issues/111 is fixed\n  @Prop({ reflect: true, mutable: true }) indeterminate = false;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) selectionMode: SelectionMode;\n\n  @Watch(\"selectionMode\")\n  getSelectionMode(): void {\n    this.isSelectionMultiLike =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.parentTreeItem = this.el.parentElement?.closest(\"calcite-tree-item\");\n    if (this.parentTreeItem) {\n      const { expanded } = this.parentTreeItem;\n      this.updateParentIsExpanded(this.parentTreeItem, expanded);\n    }\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  componentWillRender(): void {\n    this.hasChildren = !!this.el.querySelector(\"calcite-tree\");\n    this.depth = 0;\n    let parentTree = this.el.closest(\"calcite-tree\");\n\n    if (!parentTree) {\n      return;\n    }\n\n    this.selectionMode = parentTree.selectionMode;\n    this.scale = parentTree.scale || \"m\";\n    this.lines = parentTree.lines;\n\n    let nextParentTree;\n    while (parentTree) {\n      nextParentTree = parentTree.parentElement?.closest(\"calcite-tree\");\n      if (nextParentTree === parentTree) {\n        break;\n      } else {\n        parentTree = nextParentTree;\n        this.depth = this.depth + 1;\n      }\n    }\n  }\n\n  componentWillLoad(): void {\n    requestAnimationFrame(() => (this.updateAfterInitialRender = true));\n  }\n\n  componentDidLoad(): void {\n    this.updateAncestorTree();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTreeItemElement;\n\n  private isSelectionMultiLike: boolean;\n\n  render(): VNode {\n    const rtl = getElementDir(this.el) === \"rtl\";\n    const showBulletPoint =\n      this.selectionMode === \"single\" ||\n      this.selectionMode === \"children\" ||\n      this.selectionMode === \"single-persist\";\n    const showCheckmark =\n      this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\";\n    const showBlank = this.selectionMode === \"none\" && !this.hasChildren;\n    const checkboxIsIndeterminate = this.hasChildren && this.indeterminate;\n\n    const chevron = this.hasChildren ? (\n      <calcite-icon\n        class={{\n          [CSS.chevron]: true,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        data-test-id=\"icon\"\n        icon={ICONS.chevronRight}\n        onClick={this.iconClickHandler}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const defaultSlotNode: VNode = <slot key=\"default-slot\" />;\n\n    const checkbox =\n      this.selectionMode === \"ancestors\" ? (\n        <div class={CSS.checkboxContainer}>\n          <calcite-icon\n            class={CSS.checkbox}\n            icon={\n              this.selected\n                ? ICONS.checkSquareF\n                : checkboxIsIndeterminate\n                  ? ICONS.minusSquareF\n                  : ICONS.square\n            }\n            scale={getIconScale(this.scale)}\n          />\n          <label class={CSS.checkboxLabel}>{defaultSlotNode}</label>\n        </div>\n      ) : null;\n    const selectedIcon = showBulletPoint\n      ? ICONS.bulletPoint\n      : showCheckmark\n        ? ICONS.checkmark\n        : showBlank\n          ? ICONS.blank\n          : null;\n    const itemIndicator = selectedIcon ? (\n      <calcite-icon\n        class={{\n          [CSS.bulletPointIcon]: selectedIcon === ICONS.bulletPoint,\n          [CSS.checkmarkIcon]: selectedIcon === ICONS.checkmark,\n          [CSS_UTILITY.rtl]: rtl,\n        }}\n        icon={selectedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n\n    const hidden = !(this.parentExpanded || this.depth === 1);\n    const isExpanded = this.updateAfterInitialRender && this.expanded;\n    const { hasEndActions } = this;\n    const slotNode = (\n      <slot\n        key=\"actionsEndSlot\"\n        name={SLOTS.actionsEnd}\n        onSlotchange={this.actionsEndSlotChangeHandler}\n      />\n    );\n\n    const iconStartEl = (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={this.iconFlipRtl === \"start\" || this.iconFlipRtl === \"both\"}\n        icon={this.iconStart}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    return (\n      <Host\n        aria-checked={\n          this.selectionMode === \"multiple\" ||\n          this.selectionMode === \"multichildren\" ||\n          this.selectionMode === \"ancestors\"\n            ? toAriaBoolean(this.selected)\n            : undefined\n        }\n        aria-expanded={this.hasChildren ? toAriaBoolean(isExpanded) : undefined}\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-live=\"polite\"\n        aria-selected={\n          this.selectionMode === \"single\" ||\n          this.selectionMode === \"children\" ||\n          this.selectionMode === \"single-persist\"\n            ? toAriaBoolean(this.selected)\n            : undefined\n        }\n        calcite-hydrated-hidden={hidden}\n        role=\"treeitem\"\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.itemExpanded]: isExpanded }}>\n            <div class={CSS.nodeAndActionsContainer}>\n              <div\n                class={{\n                  [CSS.nodeContainer]: true,\n                  [CSS_UTILITY.rtl]: rtl,\n                }}\n                data-selection-mode={this.selectionMode}\n              >\n                {chevron}\n                {itemIndicator}\n                {this.iconStart ? iconStartEl : null}\n                {checkbox ? checkbox : defaultSlotNode}\n              </div>\n              <div\n                class={CSS.actionsEnd}\n                hidden={!hasEndActions}\n                ref={(el) => (this.actionSlotWrapper = el as HTMLElement)}\n              >\n                {slotNode}\n              </div>\n            </div>\n\n            <div\n              class={{\n                [CSS.childrenContainer]: true,\n                [CSS_UTILITY.rtl]: rtl,\n              }}\n              data-test-id=\"calcite-tree-children\"\n              onClick={this.childrenClickHandler}\n              role={this.hasChildren ? \"group\" : undefined}\n            >\n              <slot name={SLOTS.children} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"click\")\n  onClick(event: Event): void {\n    if (this.disabled || this.isActionEndEvent(event)) {\n      return;\n    }\n\n    // Solve for if the item is clicked somewhere outside the slotted anchor.\n    // Anchor is triggered anywhere you click\n    const [link] = filterDirectChildren<HTMLAnchorElement>(this.el, \"a\");\n    if (link && (event.composedPath()[0] as any).tagName.toLowerCase() !== \"a\") {\n      const target = link.target === \"\" ? \"_self\" : link.target;\n      window.open(link.href, target);\n    }\n    this.calciteInternalTreeItemSelect.emit({\n      modifyCurrentSelection: this.selectionMode === \"ancestors\" || this.isSelectionMultiLike,\n      updateItem: true,\n    });\n    this.userChangedValue = true;\n  }\n\n  private iconClickHandler = (event: MouseEvent): void => {\n    event.stopPropagation();\n    this.expanded = !this.expanded;\n  };\n\n  private childrenClickHandler = (event: MouseEvent): void => event.stopPropagation();\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (this.isActionEndEvent(event) || event.defaultPrevented) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.userChangedValue = true;\n        this.calciteInternalTreeItemSelect.emit({\n          modifyCurrentSelection: this.isSelectionMultiLike,\n          updateItem: true,\n        });\n        event.preventDefault();\n        break;\n      case \"Enter\": {\n        // activates a node, i.e., performs its default action. For parent nodes, one possible default action is to open or close the node. In single-select trees where selection does not follow focus (see note below), the default action is typically to select the focused node.\n        const link = Array.from(this.el.children).find((el) =>\n          el.matches(\"a\"),\n        ) as HTMLAnchorElement;\n\n        this.userChangedValue = true;\n\n        if (link) {\n          link.click();\n          this.selected = true;\n        } else {\n          this.calciteInternalTreeItemSelect.emit({\n            modifyCurrentSelection: this.isSelectionMultiLike,\n            updateItem: true,\n          });\n        }\n        event.preventDefault();\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTreeItemSelect: EventEmitter<TreeItemSelectDetail>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @State() hasEndActions = false;\n\n  /**\n   * Used to make sure initially expanded tree-item can properly\n   * transition and emit events from closed state when rendered.\n   *\n   * @private\n   */\n  @State() updateAfterInitialRender = false;\n\n  actionSlotWrapper!: HTMLElement;\n\n  private parentTreeItem?: HTMLCalciteTreeItemElement;\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private isActionEndEvent(event: Event): boolean {\n    const composedPath = event.composedPath();\n    return composedPath.includes(this.actionSlotWrapper);\n  }\n\n  private updateParentIsExpanded = (el: HTMLCalciteTreeItemElement, expanded: boolean): void => {\n    const items = getSlotted<HTMLCalciteTreeItemElement>(el, SLOTS.children, {\n      all: true,\n      selector: \"calcite-tree-item\",\n    });\n    items.forEach((item) => (item.parentExpanded = expanded));\n  };\n\n  /**\n   * This is meant to be called in `componentDidLoad` in order to take advantage of the hierarchical component lifecycle\n   * and help check for item selection as items are initialized\n   *\n   * @private\n   */\n  private updateAncestorTree(): void {\n    const parentItem = this.parentTreeItem;\n    if (this.selectionMode !== \"ancestors\" || !parentItem) {\n      return;\n    }\n\n    if (this.selected) {\n      const parentTree = this.el.parentElement;\n      const siblings = Array.from(parentTree?.children);\n      const selectedSiblings = siblings.filter(\n        (child: HTMLCalciteTreeItemElement) => child.selected,\n      );\n\n      if (siblings.length === selectedSiblings.length) {\n        parentItem.selected = true;\n        parentItem.indeterminate = false;\n      } else if (selectedSiblings.length > 0) {\n        parentItem.indeterminate = true;\n      }\n\n      const childItems = Array.from(\n        this.el.querySelectorAll<HTMLCalciteTreeItemElement>(\"calcite-tree-item:not([disabled])\"),\n      );\n\n      childItems.forEach((item: HTMLCalciteTreeItemElement) => {\n        item.selected = true;\n        item.indeterminate = false;\n      });\n    } else if (this.indeterminate) {\n      const parentItem = this.parentTreeItem;\n      parentItem.indeterminate = true;\n    }\n  }\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n}\n",":host {\n  @apply text-color-3\n    block\n    max-w-full\n    cursor-pointer;\n}\n\n.node-actions-container {\n  @apply flex;\n}\n\n@include calcite-hydrated-hidden();\n@include disabled();\n\n:host([scale=\"s\"]) {\n  @apply text-n2h;\n\n  .node-actions-container {\n    @apply min-h-[1.5rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.1\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding: theme(\"padding.1\");\n      }\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n1h;\n\n  .node-actions-container {\n    @apply min-h-[2rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.2\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding: theme(\"padding.2\");\n      }\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0h;\n\n  .node-actions-container {\n    @apply min-h-[2.75rem];\n    .node-container {\n      .checkbox,\n      .checkmark,\n      .bullet-point {\n        margin-inline: theme(\"margin.3\");\n      }\n      .icon-start {\n        margin-inline: theme(\"margin.3\");\n      }\n      .chevron {\n        padding-inline: var(--calcite-size-md);\n        padding-block: var(--calcite-size-sm-plus);\n      }\n    }\n  }\n}\n\n:host([lines]) {\n  .children-container::after {\n    @apply transition-default\n        absolute\n        top-0\n        w-px\n        transition-colors\n        z-default;\n    // ensure lines don't overlap focus outline\n    block-size: 96%;\n    content: \"\";\n    background-color: var(--calcite-color-border-2);\n  }\n}\n\n:host(:not([lines])) .node-container::after {\n  @apply hidden;\n}\n\n::slotted(*) {\n  @apply min-w-0 max-w-full break-words;\n  color: inherit;\n  text-decoration: none !important;\n\n  &:hover {\n    text-decoration: none !important;\n  }\n}\n\n::slotted(a) {\n  @apply w-full no-underline;\n}\n\n// focus styles\n:host {\n  @apply outline-none;\n\n  .node-container {\n    @apply focus-base;\n  }\n  &:focus,\n  &:active {\n    .node-container {\n      @apply focus-inset;\n    }\n  }\n}\n\n:host(:focus:not([disabled])) {\n  .node-container {\n    @apply focus-inset outline-none;\n  }\n\n  .checkbox {\n    @apply outline-none;\n  }\n}\n\n.actions-end {\n  @apply flex self-stretch flex-row items-center;\n}\n\n.checkbox-container {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox {\n  line-height: 0;\n  color: var(--calcite-color-border-input);\n}\n\n.checkbox-label {\n  @apply pointer-events-none flex items-center;\n}\n\n.children-container {\n  @apply relative h-0 overflow-hidden opacity-0 origin-top;\n  margin-inline-start: theme(\"margin.5\");\n  transform: scaleY(0);\n  transition:\n    var(--calcite-animation-timing) $easing-function,\n    opacity var(--calcite-animation-timing) $easing-function,\n    all var(--calcite-animation-timing) ease-in-out; // note that we're transitioning transform, not height!\n\n  .item--expanded > & {\n    @apply overflow-visible opacity-100;\n    transform: none;\n    block-size: auto;\n  }\n}\n\n.node-container {\n  @apply relative flex grow items-center min-w-0;\n\n  .checkmark,\n  .bullet-point {\n    @apply transition-default opacity-0;\n    color: var(--calcite-color-border-1);\n  }\n}\n\n.node-container:hover,\n:host([selected]) .node-container:hover,\n:host(:focus:not([disabled])) .node-container {\n  .checkmark,\n  .bullet-point {\n    @apply opacity-100;\n  }\n}\n\n:host([selected]) .node-container,\n:host([selected]) .node-container:hover {\n  @apply font-medium text-color-1;\n\n  .bullet-point,\n  .checkmark {\n    @apply opacity-100;\n    color: theme(\"colors.brand\");\n  }\n}\n\n:host([selection-mode=\"none\"]:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container {\n    padding-inline-start: theme(\"padding.2\");\n  }\n  &:host([scale=\"m\"]) .node-container {\n    padding-inline-start: theme(\"padding.4\");\n  }\n  &:host([scale=\"l\"]) .node-container {\n    padding-inline-start: theme(\"padding.6\");\n  }\n}\n\n// ancestors selection-mode, dropdown without children\n:host(:not([has-children])) {\n  &:host([scale=\"s\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.5\");\n  }\n  &:host([scale=\"m\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: theme(\"padding.6\");\n  }\n  &:host([scale=\"l\"]) .node-container[data-selection-mode=\"ancestors\"] .checkbox {\n    padding-inline-start: 1.75rem;\n  }\n}\n// ancestors selection-mode, dropdown with children\n:host([has-children]) .node-container[data-selection-mode=\"ancestors\"] {\n  .checkbox {\n    margin-inline-start: 0;\n  }\n}\n\n// dropdown with children\n:host([has-children]) .node-container {\n  .bullet-point,\n  .checkmark {\n    @apply hidden;\n  }\n}\n\n.chevron {\n  @apply transition-default\n    text-color-3\n    relative\n    self-center;\n  flex: 0 0 auto;\n  transform: rotate(0deg);\n\n  .calcite--rtl & {\n    transform: rotate(180deg);\n  }\n\n  .item--expanded .node-container > & {\n    transform: rotate(90deg);\n  }\n}\n\n:host([selected]) {\n  .checkmark,\n  .bullet-point {\n    color: var(--calcite-color-brand);\n  }\n  .checkbox {\n    color: var(--calcite-color-brand);\n  }\n}\n\n:host([has-children][indeterminate]) {\n  .checkbox {\n    color: var(--calcite-color-brand);\n  }\n}\n\n@include base-component();\n"],"names":["CSS","SLOTS","ICONS","TreeItem","proxyCustomElement","HTMLElement","iconClickHandler","event","stopPropagation","this","expanded","childrenClickHandler","userChangedValue","updateParentIsExpanded","el","getSlotted","all","selector","forEach","item","parentExpanded","actionsEndSlotChangeHandler","hasEndActions","slotChangeHasAssignedElement","expandedHandler","newValue","handleSelectedChange","value","selectionMode","indeterminate","calciteInternalTreeItemSelect","emit","modifyCurrentSelection","updateItem","getSelectionMode","isSelectionMultiLike","connectedCallback","_this$el$parentElemen","parentTreeItem","parentElement","closest","connectConditionalSlotComponent","disconnectedCallback","disconnectConditionalSlotComponent","componentWillRender","hasChildren","querySelector","depth","nextParentTree","parentTree","scale","lines","_parentTree$parentEle","componentWillLoad","requestAnimationFrame","updateAfterInitialRender","componentDidLoad","updateAncestorTree","componentDidRender","updateHostInteraction","render","rtl","getElementDir","showBulletPoint","showCheckmark","showBlank","checkboxIsIndeterminate","chevron","h","class","CSS_UTILITY","icon","onClick","getIconScale","defaultSlotNode","key","checkbox","selected","selectedIcon","itemIndicator","hidden","isExpanded","slotNode","name","onSlotchange","iconStartEl","flipRtl","iconFlipRtl","iconStart","Host","toAriaBoolean","undefined","role","tabIndex","disabled","InteractiveContainer","ref","actionSlotWrapper","isActionEndEvent","link","filterDirectChildren","composedPath","tagName","toLowerCase","target","window","open","href","keyDownHandler","defaultPrevented","preventDefault","Array","from","children","find","matches","click","includes","parentItem","siblings","selectedSiblings","filter","child","length","querySelectorAll"],"sourceRoot":""}